# Generated by Django 2.2.6 on 2020-02-27 23:16

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunityArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='RideTrip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Rider',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RideShare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_trip', models.BooleanField(blank=True, help_text='If the driver is taking passengers on the ride back', null=True)),
                ('departure_date', models.DateField(help_text='When the driver plans to depart from starting location')),
                ('return_date', models.DateField(blank=True, help_text='OPTIONAL: When the driver plans to return from end location (if is offering return trip)', null=True)),
                ('cost_per_passenger', models.DecimalField(decimal_places=2, help_text='The cost the driver wishes to charge per passenger', max_digits=5)),
                ('driver', models.ForeignKey(help_text='The Rider who is offering to drive the trip', on_delete=django.db.models.deletion.PROTECT, related_name='driver_of_rideshare_rideshare', to='rideshare.Rider')),
                ('passengers', models.ManyToManyField(blank=True, help_text='The passengers who will be embarking on this trip', null=True, related_name='passenger_of_rideshare_rideshare', to='rideshare.Rider')),
                ('pending_passengers', models.ManyToManyField(blank=True, help_text='The passengers who whish to embark on this trip but have not been accepted by the driver yet', null=True, related_name='pendingpassenger_of_rideshare_rideshare', to='rideshare.Rider')),
                ('trip', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Ridetrip_of_rideshare_rideshare', to='rideshare.RideTrip')),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Unique name for you rideshare community', max_length=20, unique=True)),
                ('slug', models.CharField(blank=True, editable=False, help_text='Unique URL path to access this community. Generated by the system.', max_length=20)),
                ('description', models.TextField(help_text='A description of your rideshare community', null=True)),
                ('members', models.ManyToManyField(blank=True, help_text='The Riders that are allowed to create and participate in ridesharing in this community', related_name='member_of_rideshare_community', to='rideshare.Rider')),
                ('moderators', models.ManyToManyField(blank=True, help_text='The Riders that manage the community. Designated by the owner.', related_name='moderator_of_rideshare_community', to='rideshare.Rider')),
                ('owner', models.ForeignKey(help_text='The Rider that owns the community', on_delete=django.db.models.deletion.PROTECT, related_name='owner_of_rideshare_community', to='rideshare.Rider')),
                ('rideshares', models.ManyToManyField(blank=True, help_text='The current rideshares that are listed under this community', to='rideshare.RideShare')),
            ],
        ),
    ]
